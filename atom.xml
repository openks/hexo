<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朱阳星的日常</title>
  
  
  <link href="/hexo/atom.xml" rel="self"/>
  
  <link href="http://www.zhuyangxing.cn/"/>
  <updated>2018-04-03T08:34:07.875Z</updated>
  <id>http://www.zhuyangxing.cn/</id>
  
  <author>
    <name>朱阳星</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在vuecli项目里使用typescript</title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/how-to-use-typescript-on-vuecli-project/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/how-to-use-typescript-on-vuecli-project/</id>
    <published>2018-04-03T08:34:07.875Z</published>
    <updated>2018-04-03T08:34:07.875Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在vuecli项目里使用typescript"><a href="#如何在vuecli项目里使用typescript" class="headerlink" title="如何在vuecli项目里使用typescript"></a>如何在vuecli项目里使用typescript</h1><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>先安装<code>typescript</code>,<code>ts-loader</code><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add typescript ts-loader</span><br></pre></td></tr></table></figure></p><p>1.修改<code>webpack</code>配置文件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build/webpack.base.conf.js</span></span><br><span class="line">entry: &#123;</span><br><span class="line">  app: <span class="string">'./src/main.ts'</span><span class="comment">// 修改为ts文件格式(务必留意修改配置文件格式需重启)</span></span><br><span class="line">&#125;,</span><br><span class="line">extensions: [<span class="string">'.js'</span>, <span class="string">'.vue'</span>, <span class="string">'.json'</span>, <span class="string">'.ts'</span>, <span class="string">'.tsx'</span>]<span class="comment">//添加ts,tsx文件格式</span></span><br><span class="line"><span class="comment">//新增loader配置</span></span><br><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">    loader: <span class="string">'ts-loader'</span>,</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      appendTsSuffixTo: [<span class="regexp">/\.vue$/</span>],</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.新增配置文件<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 根目录下 tsconfig.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"include"</span>: [</span><br><span class="line">    <span class="string">"src/**/*"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"exclude"</span>: [</span><br><span class="line">    <span class="string">"node_modules"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"allowSyntheticDefaultImports"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"experimentalDecorators"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"allowJs"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">    <span class="attr">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">    <span class="attr">"experimentalDecorators"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"isolatedModules"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"lib"</span>: [</span><br><span class="line">      <span class="string">"dom"</span>,</span><br><span class="line">      <span class="string">"es5"</span>,</span><br><span class="line">      <span class="string">"es2015.promise"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"pretty"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.新增.t.ds配置文件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增 src/vue-shims.d.ts文件</span></span><br><span class="line">declare <span class="built_in">module</span> <span class="string">"*.vue"</span> &#123;</span><br><span class="line">  <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> Vue;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>4.修改<code>main.js</code>为<code>main.ts</code><br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.ts</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;<span class="comment">//添加vue后缀不然会报出无法识别的错误</span></span><br></pre></td></tr></table></figure></p><p>经过以上四步设置后就可以直接在项目里使用<code>&lt;script lang=&#39;ts&#39;&gt;</code>标签写<code>typescript</code>了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">'ts'</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'hello'</span>,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      msg: <span class="string">'Welcome to Your Vue.js App'</span>,</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">    computedMsg(): string &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="string">`computed<span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    hello(): string &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="string">`hello<span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h1><p>使用官方推荐的(vue-class-component)[<a href="https://github.com/vuejs/vue-class-component]" target="_blank" rel="noopener">https://github.com/vuejs/vue-class-component]</a><br>安装插件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add  babel-plugin-transform-decorators-legacy vue-<span class="class"><span class="keyword">class</span>-<span class="title">component</span></span></span><br></pre></td></tr></table></figure></p><p>修改<code>babel</code>配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//.babelrc </span><br><span class="line">  &quot;plugins&quot;: [&quot;transform-runtime&quot;,&quot;babel-plugin-transform-class-properties&quot;],// 添加插件</span><br></pre></td></tr></table></figure></p><p>之后就可以使用类的方式写<code>ts</code>了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">'ts'</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Component <span class="keyword">from</span> <span class="string">'vue-class-component'</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@Component</span></span><br><span class="line"><span class="javascript"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// initial data</span></span></span><br><span class="line"><span class="javascript">  name:string = <span class="string">'hello'</span>;</span></span><br><span class="line"><span class="javascript">  msga:string = <span class="string">'sssd'</span>;</span></span><br><span class="line"><span class="javascript">  msg:string = <span class="string">'msg'</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// lifecycle hook</span></span></span><br><span class="line"><span class="undefined">  mounted() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.greet();</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// computed</span></span></span><br><span class="line"><span class="undefined">  get computedMsg() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">`computed <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="string">`computed <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// method</span></span></span><br><span class="line"><span class="undefined">  greet() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">`greeting: <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  hello() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">this</span>.msg;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> Hello;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果需要<code>watch</code>则需要添加(<code>vue-property-decorator</code>)[<a href="https://github.com/kaorun343/vue-property-decorator]具体使用方法" target="_blank" rel="noopener">https://github.com/kaorun343/vue-property-decorator]具体使用方法</a> 请参照文档<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-property-decorator</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我在尝试过程中发现两个坑爹问题<br>1.项目起动起来后chrome浏览器无法访问 （纸飞机）<br>2.第二阶段所有设置好后发现页面报错 （不认真）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Vue warn]: Property or method &quot;msg&quot; is not defined on the instance but referenced during render. Make sure to declare reactive data properties in the data option.</span><br><span class="line"></span><br><span class="line">found in</span><br><span class="line"></span><br><span class="line">---&gt; &lt;Hello&gt; at src/components/Hello.vue</span><br><span class="line">       &lt;App&gt; at src/App.vue</span><br><span class="line">         &lt;Root&gt;</span><br></pre></td></tr></table></figure></p><p>对于问题1:<br>发现竟然跟<strong><em>纸飞机</em></strong>有关。。纸飞机 。。之前一直都是好的，在chrome自动升级后就不行了无法打开，<br>在我用mac访问局域网无法访问的时候才发觉跟网络有关把纸飞机一关，局域网和项目竟然都能正常了</p><p>对于问题2:<br>一直找不到原因，明明都对啊，为什么显示不正常,看提示信息很明显没有声明就在template里使用.<br>我的代码如下<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Component <span class="keyword">from</span> <span class="string">'vue-class-component'</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">@Component</span></span><br><span class="line"><span class="javascript"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// initial data</span></span></span><br><span class="line"><span class="javascript">  name: <span class="string">'hello'</span>;</span></span><br><span class="line"><span class="javascript">  msga: <span class="string">'sssd'</span>;</span></span><br><span class="line"><span class="javascript">  msg: <span class="string">'msg'</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// lifecycle hook</span></span></span><br><span class="line"><span class="undefined">  mounted() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.greet();</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// computed</span></span></span><br><span class="line"><span class="undefined">  get computedMsg() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">`computed <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="string">`computed <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// method</span></span></span><br><span class="line"><span class="undefined">  greet() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">`greeting: <span class="subst">$&#123;<span class="keyword">this</span>.msg&#125;</span>`</span>);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  hello() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">this</span>.msg;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> Hello;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>甚至我都把<code>ts</code>都去了只用<code>vue-class-component</code>对比了N久搞到要回家了硬是没找到答案。。。<br>回家还在纳闷为毛不正常，为什么第二天一早很容易就发现问题了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg: &apos;msg&apos;;//不是用冒号 应该用等号。。 这么简单昨天竟然一直没看出来</span><br><span class="line">msg= &apos;msg&apos;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      教你如何在vuecli项目里使用typescript
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://www.zhuyangxing.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>读airbnb标准有感</title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/%E8%AF%BBairbnb%E6%A0%87%E5%87%86%E6%9C%89%E6%84%9F/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/读airbnb标准有感/</id>
    <published>2018-04-03T08:34:07.875Z</published>
    <updated>2018-04-03T08:34:07.875Z</updated>
    
    <content type="html"><![CDATA[<p>读<a href="https://github.com/airbnb/javascript" target="_blank" rel="noopener">airbnb javascript标准</a> 有感</p><p>在读标准时发现还有很多知识点不大明白记录之<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Array.map</span><br><span class="line">Array.forEach</span><br><span class="line">Array.reduce</span><br><span class="line">Array.from</span><br><span class="line">Object.assign</span><br><span class="line">Number(string)</span><br><span class="line">object literals</span><br><span class="line">export 和export default区别</span><br><span class="line">import foo, &#123; named1, named2 &#125; from &apos;foo&apos;;</span><br></pre></td></tr></table></figure></p><h2 id="Array-map介绍"><a href="#Array-map介绍" class="headerlink" title="Array.map介绍"></a>Array.map介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var new_array = arr.map(callback[, thisArg])</span><br><span class="line"></span><br><span class="line">callback</span><br><span class="line">        Function that produces an element of the new Array, taking three arguments:</span><br><span class="line">    currentValue 当前值</span><br><span class="line">        The current element being processed in the array.</span><br><span class="line">    index index值 从0开始的index值</span><br><span class="line">        The index of the current element being processed in the array.</span><br><span class="line">    array 当前数组</span><br><span class="line">        The array map was called upon.</span><br><span class="line">thisArg</span><br><span class="line">    Optional. Value to use as this when executing callback.</span><br><span class="line">    If a thisArg parameter is provided to map, it will be used as callback&apos;s this value. Otherwise, the value undefined will be used as its this value.</span><br><span class="line">Return value  返回值为新数组不影响原数组</span><br><span class="line">    A new array with each element being the result of the callback function.</span><br><span class="line"></span><br><span class="line">Array.map不修改原数组</span><br></pre></td></tr></table></figure><h2 id="Array-forEach介绍"><a href="#Array-forEach介绍" class="headerlink" title="Array.forEach介绍"></a>Array.forEach介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">arr.forEach(function callback(currentValue, index, array) &#123;</span><br><span class="line">    //your iterator</span><br><span class="line">&#125;[, thisArg]);</span><br><span class="line"></span><br><span class="line">callback</span><br><span class="line">        Function to execute for each element, taking three arguments:</span><br><span class="line">    currentValue  当前值</span><br><span class="line">        The current element being processed in the array.</span><br><span class="line">    index  从0开始的index值</span><br><span class="line">        The index of the current element being processed in the array.</span><br><span class="line">    array 当前数组</span><br><span class="line">        The array that forEach() is being applied to.</span><br><span class="line">thisArg [Optional]</span><br><span class="line">        Value to use as this (i.e the reference Object) when executing callback.</span><br><span class="line">        If a thisArg parameter is provided to forEach, it will be used as callback&apos;s this value. Otherwise, the value undefined will be used as its this value.</span><br><span class="line">Return value</span><br><span class="line">    undefined.</span><br><span class="line">Array.forEach不修改原数组</span><br></pre></td></tr></table></figure><h2 id="Array-reduce介绍"><a href="#Array-reduce介绍" class="headerlink" title="Array.reduce介绍"></a>Array.reduce介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">arr.reduce(callback, [initialValue])</span><br><span class="line"></span><br><span class="line">callback</span><br><span class="line">        Function to execute on each element in the array, taking four arguments:</span><br><span class="line">    accumulator 累加器</span><br><span class="line">        The accumulator accumulates the callback&apos;s return values; it is the accumulated value previously returned in the last invocation of the callback, or initialValue, if supplied (see below).</span><br><span class="line">    currentValue 当前值</span><br><span class="line">        The current element being processed in the array.</span><br><span class="line">    currentIndex</span><br><span class="line">        The index of the current element being processed in the array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.</span><br><span class="line">    array  当前数组</span><br><span class="line">        The array reduce was called upon.</span><br><span class="line">    initialValue</span><br><span class="line">        累加器初始值，</span><br><span class="line">        如果不存在则accumulator为第一个元素值，currentValue为第二个元素值 currentIndex从1开始</span><br><span class="line">        如果存在则accumulator为初始值，currentValue为第一个元素值 currentIndex从0开始</span><br><span class="line">        [Optional] Value to use as the first argument to the first call of the callback. If no initial value is supplied, the first element in the array will be used. Calling reduce on an empty array without an initial value is an error.</span><br><span class="line">Return value</span><br><span class="line">    The value that results from the reduction.</span><br></pre></td></tr></table></figure><h2 id="Array-from介绍"><a href="#Array-from介绍" class="headerlink" title="Array.from介绍"></a>Array.from介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Parameters</span><br><span class="line">    arrayLike</span><br><span class="line">        An array-like or iterable object to convert to an array.</span><br><span class="line">    mapFn [Optional]</span><br><span class="line">        Map function to call on every element of the array.</span><br><span class="line">    thisArg [Optional]</span><br><span class="line">        Value to use as this when executing mapFn.</span><br><span class="line">Return value</span><br><span class="line">    A new Array instance.</span><br><span class="line">Array.from可以把类数组对象转变成数组如函数的入参,</span><br><span class="line">document.querySelectorAll(&quot;div&quot;)返回的nodelist</span><br></pre></td></tr></table></figure><h2 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign()"></a>Object.assign()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Object.assign(target, ...sources)</span><br><span class="line"></span><br><span class="line">The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.</span><br><span class="line"></span><br><span class="line">Parameters</span><br><span class="line">    target</span><br><span class="line">        The target object.</span><br><span class="line">    sources</span><br><span class="line">        The source object(s).</span><br><span class="line">Return value</span><br><span class="line">    The target object.</span><br><span class="line"></span><br><span class="line">被用来复制一个或多个对象的可枚举属性（浅拷贝,需留意多层级嵌套对象）</span><br></pre></td></tr></table></figure><h2 id="Number-string"><a href="#Number-string" class="headerlink" title="Number(string)"></a>Number(string)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Using the Number object to assign values to numeric variables</span><br><span class="line">如果string不能转换为数字则返回NaN</span><br></pre></td></tr></table></figure><h2 id="object-literals"><a href="#object-literals" class="headerlink" title="object literals"></a>object literals</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这就是对象字面量</span><br><span class="line">const a=&#123;</span><br><span class="line">    name:zs,</span><br><span class="line">    age:18,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const b =[1,3,4,5,6,7];</span><br></pre></td></tr></table></figure><h2 id="export-和export-default区别"><a href="#export-和export-default区别" class="headerlink" title="export 和export default区别"></a>export 和export default区别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">导出和默认导出</span><br><span class="line">导出可以有多种但export default只能有一个</span><br><span class="line"></span><br><span class="line">function foo()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function bar()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export var named1 = &apos;Michael&apos;;</span><br><span class="line">export var named2 = &apos;Jackson&apos;;</span><br><span class="line">export &#123;bar&#125; ;</span><br><span class="line">export default foo;</span><br></pre></td></tr></table></figure><h2 id="import-foo-named1-named2-from-‘foo’"><a href="#import-foo-named1-named2-from-‘foo’" class="headerlink" title="import foo, { named1, named2 } from ‘foo’;"></a>import foo, { named1, named2 } from ‘foo’;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">即在一条import语句中，同时输入默认方法和其他变量，可以写成下面这样。</span><br><span class="line">import foo, &#123; named1, named2 &#125; from &apos;foo&apos;;</span><br><span class="line">foo为export default</span><br><span class="line">named1 和 named2 为export &#123;named1&#125;,eport &#123;named2&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      读airbnb标准有感
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180209_vuex%E5%92%8Credux%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180209_vuex和redux区别/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>vuex和redux区别  </p><ol><li>vuex的store是手工创建的，redux的store是由createStore协助创建<br>rudex只会创建需要的字段，而vuex可能创建出未用到的字段，或遗漏某些需要字段即会出现State里没有声明，但是会直接使用的情况   </li><li>vuex的mutation(用于执行同步操作)类似于redux的action    </li><li>vuex的异步操作使用的是action,redux的异步操作需要使用中间件<br>常用的中间件是redux-thunk<br>简单来讲逻辑是这样的actionCreator返回的不是action而是一个function,这个function会在合适的时间(一般指异步结束时)dispach action</li></ol><p>redux-thunk的实现是这样的：<br>在action被分发时,中间件(redux-thunk)被调用,在需要的时候协助action creator分发真正的action(或者什么都不做)<br>中间件是纯粹的函数有明确的使用方法且严格遵守以下格式<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> anyMiddleware = <span class="function"><span class="keyword">function</span> (<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">  dispatch,</span></span></span><br><span class="line"><span class="function"><span class="params">  getState</span></span></span><br><span class="line"><span class="function"><span class="params">&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">action</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 中间件业务逻辑相关代码</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>函数柯里化后为<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> anyMiddleware = curry((&#123;</span><br><span class="line">  dispatch,</span><br><span class="line">  getState</span><br><span class="line">&#125;, next, action) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 中间件业务逻辑相关代码</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vuex和redux区别  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vuex的store是手工创建的，redux的store是由createStore协助创建&lt;br&gt;rudex只会创建需要的字段，而vuex可能创建出未用到的字段，或遗漏某些需要字段即会出现State里没有声明，但是会直
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180403_react%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E4%B8%8E%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180403_react受控组件与非受控组件区别/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>受控组件与非受控组件区别</p><p><strong>受控组件：</strong><br>受react控制组件，即该组件受setState()控制<br>在change时重新设置state的值为event.target.value(text,textarea,select)或event.target.checked(radio&amp;checkbox)<br>通过state取值</p><p><strong>非受控组件：</strong><br>不受react控制组件，即该组件不受setState()控制与传统的HTML表单输入相似，input输入值即显示最新值,可以通过ref取值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;受控组件与非受控组件区别&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;受控组件：&lt;/strong&gt;&lt;br&gt;受react控制组件，即该组件受setState()控制&lt;br&gt;在change时重新设置state的值为event.target.value(text,textarea,select
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180402_%E8%8E%B7%E5%8F%96%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E7%9A%84%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180402_获取树形结构的所有节点/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>获取树形结构的所有节点<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tree = &#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"label"</span>: <span class="string">"一级 1"</span>,</span><br><span class="line">    <span class="string">"children"</span>: [&#123;</span><br><span class="line">        <span class="string">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"二级 2-1"</span>,</span><br><span class="line">        <span class="string">"children"</span>: [&#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="string">"label"</span>: <span class="string">"三级 3-1-1"</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">"label"</span>: <span class="string">"三级 3-1-2"</span>,</span><br><span class="line">            <span class="string">"disabled"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"二级 2-2"</span>,</span><br><span class="line">        <span class="string">"disabled"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"children"</span>: [&#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">6</span>,</span><br><span class="line">            <span class="string">"label"</span>: <span class="string">"三级 3-2-1"</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="string">"label"</span>: <span class="string">"三级 3-2-2"</span>,</span><br><span class="line">            <span class="string">"disabled"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 把树形结构拍平获取所有节点</span></span><br><span class="line"><span class="comment"> * @method   getNode</span></span><br><span class="line"><span class="comment"> * @param    &#123;Object&#125;                node 要拍平结构的树对象</span></span><br><span class="line"><span class="comment"> * @return   &#123;Array&#125;                      拍平后的节点数组，不包含节点的子节点信息</span></span><br><span class="line"><span class="comment"> * @author 朱阳星</span></span><br><span class="line"><span class="comment"> * @email  zhuyangxing@foxmail.com</span></span><br><span class="line"><span class="comment"> * @datetime 2018-04-01T16:42:52+080</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNode</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = []</span><br><span class="line">    <span class="keyword">let</span> _getNode = <span class="function"><span class="keyword">function</span> (<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> tmp =<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(node))</span><br><span class="line">        <span class="keyword">delete</span> tmp.children</span><br><span class="line">        result.push(tmp) <span class="comment">//移除拍平数组的子元素,只保留节点相关元素</span></span><br><span class="line">        <span class="keyword">let</span> child = node.children</span><br><span class="line">        <span class="keyword">if</span> (child != <span class="literal">undefined</span> &amp;&amp; child.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            child.forEach(<span class="function"><span class="params">ele</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">arguments</span>.callee(ele)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    _getNode(node)</span><br><span class="line">    _getNode=<span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line">getNode(tree)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;获取树形结构的所有节点&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180402_%E4%BD%BF%E7%94%A8react%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180402_使用react实现数据同步功能/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>要求如下</p><ol><li>输入框输入内容数据长度大于0，展示出预览信息</li><li>光标离开关闭预览信息</li><li>预览信息每隔4位插入一个特殊字符_,输入内容不变</li><li>限制长度为13位</li><li>只允许输入数字（0-9）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Zinput.js</span></span><br><span class="line"><span class="keyword">import</span> React, &#123;</span><br><span class="line">  Component</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./Zinput.css'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> 获取焦点事件 原生onFocus 即可</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> 离开焦点事件 原生onBlur即可</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> 输入框数据过滤 直接在change方法里进行过滤</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> 条件处理 通过不同条件返回不同节点做条件处理</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zinput</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      value: <span class="string">''</span>,</span><br><span class="line">      showBig: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleChange = <span class="keyword">this</span>.handleChange.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>.inputOnFocus = <span class="keyword">this</span>.inputOnFocus.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>.inputOnBlur = <span class="keyword">this</span>.inputOnBlur.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  inputOnFocus() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.value.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        showBig: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  inputOnBlur() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">      showBig: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.props.chanegNumber)&#123;</span><br><span class="line">      <span class="keyword">this</span>.props.chanegNumber(<span class="keyword">this</span>.state.value)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  handleChange(event) &#123;</span><br><span class="line">    <span class="keyword">let</span> val = event.target.value.substr(<span class="number">0</span>, <span class="number">13</span>)</span><br><span class="line">      .replace(<span class="regexp">/[^\d]/g</span>, <span class="string">''</span>)</span><br><span class="line">    event.target.value = val</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">      value: val,</span><br><span class="line">      showBig: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 根据字符串没隔len位插入一个下滑杠，返回处理后的字符串</span></span><br><span class="line"><span class="comment">   * @method   getStr</span></span><br><span class="line"><span class="comment">   * @author 朱阳星</span></span><br><span class="line"><span class="comment">   * @datetime 2018-04-02T09:57:58+080</span></span><br><span class="line"><span class="comment">   * @email    zhuyangxing@foxmail.com</span></span><br><span class="line"><span class="comment">   * @param    &#123;String&#125; str 待处理字符串</span></span><br><span class="line"><span class="comment">   * @param    &#123;Number&#125; len 每隔位数插入下滑杠</span></span><br><span class="line"><span class="comment">   * @return   &#123;String&#125; 处理后的字符串</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getStr(str, len) &#123;</span><br><span class="line">    <span class="keyword">let</span> lenth = str.length</span><br><span class="line">    <span class="keyword">let</span> len1 = len - <span class="number">1</span></span><br><span class="line">    <span class="keyword">let</span> newStr = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lenth; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i % len === len1 &amp;&amp; i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        newStr += str.charAt(i) + <span class="string">'_'</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        newStr += str.charAt(i)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (newStr.length % (len + <span class="number">1</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 解决最后一位为补充项问题</span></span><br><span class="line">      newStr = newStr.substr(<span class="number">0</span>, newStr.length - <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newStr</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="comment">// NOTE return 需要用圆括号包住并处理</span></span><br><span class="line">    <span class="comment">// NOTE 条件语句里没有节点也要用空字符串进行处理 否则sonalint会报错，页面也会报错</span></span><br><span class="line">    <span class="keyword">const</span> showBig = <span class="keyword">this</span>.state.showBig ? (</span><br><span class="line">      &lt;div className=<span class="string">"big-show"</span>&gt;&#123; <span class="keyword">this</span>.getStr(<span class="keyword">this</span>.state.value,<span class="number">4</span>) &#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    ) : ''</span></span><br><span class="line"><span class="regexp">    return (</span></span><br><span class="line"><span class="regexp">      &lt;div className="zInput"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input className="input" </span></span><br><span class="line"><span class="regexp">                type = "text" </span></span><br><span class="line"><span class="regexp">                onFocus=&#123; this.inputOnFocus &#125;</span></span><br><span class="line"><span class="regexp">                onBlur=&#123; this.inputOnBlur &#125;</span></span><br><span class="line"><span class="regexp">                value=&#123; this.state.value &#125; </span></span><br><span class="line"><span class="regexp">                onChange=&#123; this.handleChange &#125;&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/i</span>nput&gt;</span><br><span class="line">        &#123;showBig&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Zinput; /</span><span class="regexp">/ Don’t forget to use export default!</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span> <span class="selector-tag">Zinput</span><span class="selector-class">.css</span> <span class="selector-tag">--</span>&gt;</span><br><span class="line"><span class="selector-class">.zInput</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">40px</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.input</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.big-show</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能虽然实现，但是肯定是作为某个节点的某个子组件使用的，父组件调用方法有两种</p><p>1.使用refs直接获取子组件state的值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">  <span class="keyword">super</span>(props);</span><br><span class="line">  <span class="keyword">this</span>.handerClick2 = <span class="keyword">this</span>.handerClick2.bind(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">handerClick2()&#123;</span><br><span class="line">  <span class="comment">// NOTE 父组件通过refs获取子组件的state </span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"使用ref获取子组件的值"</span>,<span class="keyword">this</span>.refs.zinput.state.value)</span><br><span class="line">&#125;</span><br><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      &lt;Zinput ref=<span class="string">"zinput"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Zinput</span>&gt;</span></span></span><br><span class="line">      &lt;input type=<span class="string">"button"</span> value=<span class="string">"获取电话号码的值22"</span> onClick=&#123; <span class="keyword">this</span>.handerClick2 &#125;/&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;  </span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p><p>2.每次子组件焦点离开时调用父组件传过来的方法，修改父组件state值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">  <span class="keyword">super</span>(props);</span><br><span class="line">  <span class="keyword">this</span>.state = &#123;</span><br><span class="line">    phoneNumber: <span class="string">''</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">this</span>.handerClick = <span class="keyword">this</span>.handerClick.bind(<span class="keyword">this</span>);</span><br><span class="line">  <span class="keyword">this</span>.changePhoneNumber = <span class="keyword">this</span>.changePhoneNumber.bind(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">changePhoneNumber(number)&#123;</span><br><span class="line">  <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">      phoneNumber: number,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">handerClick()&#123;</span><br><span class="line">  <span class="comment">// NOTE 根据react的思想是在子组件处理完某件事的时候调用父组件的方法修改父组件的state值</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"使用state获取值"</span>,<span class="keyword">this</span>.state.phoneNumber)</span><br><span class="line">&#125;</span><br><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      &lt;Zinput ref=<span class="string">"zinput"</span> chanegNumber=&#123;<span class="keyword">this</span>.changePhoneNumber&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Zinput</span>&gt;</span></span></span><br><span class="line">      &lt;input type=<span class="string">"button"</span> value=<span class="string">"获取电话号码的值"</span> onClick=&#123; <span class="keyword">this</span>.handerClick &#125;/&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要求如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入框输入内容数据长度大于0，展示出预览信息&lt;/li&gt;
&lt;li&gt;光标离开关闭预览信息&lt;/li&gt;
&lt;li&gt;预览信息每隔4位插入一个特殊字符_,输入内容不变&lt;/li&gt;
&lt;li&gt;限制长度为13位&lt;/li&gt;
&lt;li&gt;只允许输入数字（0-9）&lt;fi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180330_%E8%AE%BAvue%E9%A1%B9%E7%9B%AEapi%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BB%84%E7%BB%87%E6%96%B9%E5%BC%8F/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180330_论vue项目api相关代码的组织方式/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>看了下项目组同事的代码，发现不同项目有不同的组织版本  </p><p><strong>版本一：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">├─apis</span><br><span class="line">│      a.api.js</span><br><span class="line">│      b.api.js</span><br><span class="line">│      b.api.js</span><br><span class="line">│      d.api.js</span><br></pre></td></tr></table></figure></p><p>每个api文件里都是这样的代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// d.api.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'@/utils/http'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">editUser</span> (<span class="params">Param</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.post(<span class="string">'url1'</span>, &#123;</span><br><span class="line">        ...Param</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteUser</span> (<span class="params">Param</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.post(<span class="string">'url2'</span>, &#123;</span><br><span class="line">        ...Param</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用方式如下</span></span><br><span class="line"><span class="keyword">import</span> &#123;editUser&#125; <span class="keyword">from</span> <span class="string">'@/apis/d.api.js'</span></span><br></pre></td></tr></table></figure></p><p>这种方法的缺点：</p><ol><li>新增一个借口就新增一个方法</li><li>任何需要调用借口的地方都需要引入</li><li>api文件里只有url和函数名不一样,其他都一样,应该封装到一起</li><li>查看所有接口需一个一个函数去看,麻烦</li></ol><p><strong>版本二：</strong><br>干脆不把api统一到一起，把axios挂载到vue对象上只在需要的地方写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$axios.post(url,params).then()</span><br></pre></td></tr></table></figure></p><p>这种方法缺点：</p><ol><li>如果修改url路径,需要全局搜索替换改动地方较多</li><li>无法查看所有接口，不便于全局掌控</li></ol><p><strong>版本三:</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// apis/index.js</span></span><br><span class="line"><span class="comment">// 把所有api的url统一在一起并挂在到vue对象上</span></span><br><span class="line"><span class="comment">// 所有接口都在一个文件里会比较大</span></span><br><span class="line"><span class="comment">// 可以按功能模块分组编写</span></span><br><span class="line"><span class="keyword">let</span> ENV = &#123;</span><br><span class="line">    name1: <span class="string">'url1'</span>, </span><br><span class="line">    <span class="comment">// 用户相关接口</span></span><br><span class="line">    name2: <span class="string">'url2'</span>, </span><br><span class="line">    <span class="comment">// 积分相关接口</span></span><br><span class="line">    name3: <span class="string">'url3'</span>,</span><br><span class="line">    <span class="comment">// 产品相关接口</span></span><br><span class="line">    name4: <span class="string">'url4'</span>, </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ENV</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/main.js</span></span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'@/apis/index.js'</span></span><br><span class="line">Vue.prototype.$api = api</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要调用接口的js文件</span></span><br><span class="line"><span class="keyword">this</span>.$axios.post(<span class="keyword">this</span>.$api.name1,params).then()</span><br></pre></td></tr></table></figure><p>缺点：</p><ol><li>暂时没想到<br>优点:</li><li>更改url时只需要改动一个地方</li><li>可以在一个地方查看所有接口</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看了下项目组同事的代码，发现不同项目有不同的组织版本  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;版本一：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180330_%E4%BD%BF%E7%94%A8vue%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%89%8B%E6%9C%BA%E5%8F%B7%E9%93%B6%E8%A1%8C%E5%8D%A1%E7%9A%84%E5%90%8C%E6%AD%A5%E6%98%BE%E7%A4%BA%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180330_使用vue简单实现手机号银行卡的同步显示功能/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单实现手机号银行卡的同步显示功能"><a href="#简单实现手机号银行卡的同步显示功能" class="headerlink" title="简单实现手机号银行卡的同步显示功能"></a>简单实现手机号银行卡的同步显示功能</h1><p><strong>这是某盟的一道面试题</strong><br>难道不都是只要有了清晰的思路后边写边优化么<br>当时我就说了思路用计算属性根据输入框的内容计算出预览框的值<br>处理focus和blur事件即可<br>非要手写，手写根本写不出啊，然后面试官就认为我不会 无语了   </p><h2 id="要求如下"><a href="#要求如下" class="headerlink" title="要求如下"></a>要求如下</h2><ol><li>输入框输入内容数据长度大于0，展示出预览信息</li><li>光标离开关闭预览信息</li><li>预览信息每隔4位插入一个特殊字符_,输入内容不变</li></ol><p>就是用计算属性判断即可<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">"html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"zInput"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big-show"</span> <span class="attr">v-show</span>=<span class="string">"showBig"</span>&gt;</span>&#123;&#123;txt2&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             @<span class="attr">blur</span>=<span class="string">"handerBlur"</span></span></span><br><span class="line"><span class="tag">             @<span class="attr">focus</span>=<span class="string">"handerFocus"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">v-model</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'z-input'</span>,</span></span><br><span class="line"><span class="undefined">    data () &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            txt: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            showBig: <span class="literal">false</span>,</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    computed: &#123;</span></span><br><span class="line"><span class="javascript">        txt2: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="keyword">this</span>.txt.length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.showBig = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">this</span>.getStr(<span class="keyword">this</span>.txt, <span class="number">4</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">        handerBlur () &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.showBig = <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        handerFocus (evt) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (evt.target.value.length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.showBig = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        getStr (str, len) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> lenth = str.length</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> len1 = len - <span class="number">1</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> newStr = <span class="string">''</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lenth; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (i % len === len1 &amp;&amp; i &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    newStr += str.charAt(i) + <span class="string">'_'</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                    newStr += str.charAt(i)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (newStr.length % (len + <span class="number">1</span>) === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 解决最后一位为补充项问题</span></span></span><br><span class="line"><span class="undefined">                newStr = newStr.substr(0, newStr.length - 1)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> newStr</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.zInput</span>&#123;</span></span><br><span class="line"><span class="undefined">    position: relative;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.big-show</span> &#123;</span></span><br><span class="line"><span class="undefined">        position: absolute;</span></span><br><span class="line"><span class="undefined">        top: -40px;</span></span><br><span class="line"><span class="undefined">        font-size: 36px;</span></span><br><span class="line"><span class="undefined">        line-height: 40px;</span></span><br><span class="line"><span class="undefined">        background-color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.zInput</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">top</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果再加入个长度限制，则以上方法就不合适了,更换实现方案<br><code>v-model</code>其实是个<a href="https://cn.vuejs.org/v2/guide/components.html#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener">语法糖</a><br>分开写为<code>v-bind:value</code>和<code>v-on:input</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">lang</span>=<span class="string">"html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"zInput"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big-show"</span> <span class="attr">v-show</span>=<span class="string">"showBig"</span>&gt;</span>&#123;&#123;txt2&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             @<span class="attr">blur</span>=<span class="string">"handerBlur"</span></span></span><br><span class="line"><span class="tag">             @<span class="attr">focus</span>=<span class="string">"handerFocus"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">v-bind:value</span>=<span class="string">"txt"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">v-on:input</span>=<span class="string">"handerInput"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'z-input'</span>,</span></span><br><span class="line"><span class="undefined">    data () &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            txt: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            txt2: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            showBig: <span class="literal">false</span>,</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">        handerInput (evt) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> val = evt.target.value.substr(<span class="number">0</span>, <span class="number">13</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 限制长度13位</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.txt = val</span></span><br><span class="line"><span class="undefined">            evt.target.value = val</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="keyword">this</span>.txt.length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.showBig = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.txt2 = <span class="keyword">this</span>.getStr(<span class="keyword">this</span>.txt, <span class="number">4</span>)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        handerBlur () &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.showBig = <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        handerFocus (evt) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (evt.target.value.length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.showBig = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        getStr (str, len) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> lenth = str.length</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> len1 = len - <span class="number">1</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> newStr = <span class="string">''</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lenth; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (i % len === len1 &amp;&amp; i &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    newStr += str.charAt(i) + <span class="string">'_'</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                    newStr += str.charAt(i)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (newStr.length % (len + <span class="number">1</span>) === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 解决最后一位为补充项问题</span></span></span><br><span class="line"><span class="undefined">                newStr = newStr.substr(0, newStr.length - 1)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> newStr</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>限制只能输入数字<br>首先想到的是在<code>keyup</code>时把非数字过滤掉<br>但是事实是先执行<code>keydown</code>-&gt;<code>handerInput</code>-&gt;<code>keyup</code></p><p>那就在<code>keydown</code>时处理呗，但是keydown修改<code>evt.target.value</code>后<br>在<code>handerInput</code>取到的<code>evt.target.value</code>依旧是未处理的所以说在<code>keydown</code>处理不起作用<br>必须要在<code>handerInput</code>时处理<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">       @<span class="attr">blur</span>=<span class="string">"handerBlur"</span></span></span><br><span class="line"><span class="tag">       @<span class="attr">focus</span>=<span class="string">"handerFocus"</span></span></span><br><span class="line"><span class="tag">       @<span class="attr">keyup</span>=<span class="string">"handerKeyup"</span></span></span><br><span class="line"><span class="tag">       @<span class="attr">keydown</span>=<span class="string">"handerKeydown"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">v-bind:value</span>=<span class="string">"txt"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">v-on:input</span>=<span class="string">"handerInput"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">       handerKeydown (evt) &#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(<span class="string">'handerKeydown'</span>)</span></span><br><span class="line"><span class="javascript">           evt.target.value = evt.target.value.replace(<span class="regexp">/[^\d]/g</span>, <span class="string">''</span>)</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 这里修改不起作用</span></span></span><br><span class="line"><span class="undefined">       &#125;,</span></span><br><span class="line"><span class="undefined">       handerKeyup (evt) &#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(<span class="string">'keyup'</span>)</span></span><br><span class="line"><span class="javascript">           evt.target.value = evt.target.value.replace(<span class="regexp">/[^\d]/g</span>, <span class="string">''</span>)</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 这里执行顺序靠后 修改无用</span></span></span><br><span class="line"><span class="undefined">       &#125;,</span></span><br><span class="line"><span class="undefined">       handerInput (evt) &#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">let</span> val = evt.target.value.substr(<span class="number">0</span>, <span class="number">13</span>).replace(<span class="regexp">/[^\d]/g</span>, <span class="string">''</span>)</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(<span class="string">'handerInput__val'</span>, val)</span></span><br><span class="line"><span class="javascript">           <span class="comment">//这里拿到的val是纯数字</span></span></span><br><span class="line"><span class="undefined">           evt.target.value = val</span></span><br><span class="line"><span class="javascript">           <span class="keyword">this</span>.txt = val</span></span><br><span class="line"><span class="javascript">           <span class="keyword">if</span> (<span class="keyword">this</span>.txt.length &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">this</span>.showBig = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">           &#125;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">this</span>.txt2 = <span class="keyword">this</span>.getStr(<span class="keyword">this</span>.txt, <span class="number">4</span>)</span></span><br><span class="line"><span class="undefined">       &#125;,</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简单实现手机号银行卡的同步显示功能&quot;&gt;&lt;a href=&quot;#简单实现手机号银行卡的同步显示功能&quot; class=&quot;headerlink&quot; title=&quot;简单实现手机号银行卡的同步显示功能&quot;&gt;&lt;/a&gt;简单实现手机号银行卡的同步显示功能&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;这是
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_%E7%82%B9%E5%87%BBtab%E9%A1%B5%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%EF%BC%8C%E4%B8%8D%E5%90%8Ctab%E9%A1%B5%E5%87%BA%E7%8E%B0%E6%95%B0%E6%8D%AE%E6%B7%B7%E4%B9%B1%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_点击tab页切换数据，不同tab页出现数据混乱问题/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前提条件：</strong><br>一个页面有3个tab,点击不同tab分别加载不同数据，每次点击都会从服务端重新加载一次数据  </p><p><strong>问题：</strong><br>tab分别为A,B,C 点击A时发送请求,在请求返回结果时判断当前选中的是哪个tab<br>根据当前tab把返回值填充到哪个tab的data数据里<br>聪明如你，可能已经发现这种设计的问题了<br>如果快速切换先点A立马再点B可能返回A的数据但填充的是B的表格，就很容易造成数据错乱  </p><p><strong>解决方案：</strong>    </p><ol><li>ajax请求时把a,b,c作为冗余项传给服务端，服务端可以不作处理，返回结果根据该冗余项给A,B,C的某个tab的data进行赋值，确保tab与数据不混乱  </li><li>判断ajax请求结果是否可缓存，如果可缓存则只需要请求3次缓存数据即可大大减少请求数据</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;前提条件：&lt;/strong&gt;&lt;br&gt;一个页面有3个tab,点击不同tab分别加载不同数据，每次点击都会从服务端重新加载一次数据  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;br&gt;tab分别为A,B,C 点击A时发送请求,在请求返回结果时判断当
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E6%A0%B9%E6%8D%AE%E6%9F%90%E5%B1%9E%E6%80%A7%E8%BF%87%E6%BB%A4%E5%AF%B9%E8%B1%A1/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_对象数组根据某属性过滤对象/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p><strong>对象数组根据某属性过滤对象</strong></p><p>自己写了个包放npm了 在<a href="https://www.npmjs.com/package/remove-duplicate-object-by-attr" target="_blank" rel="noopener">这里</a></p><p><strong>对象数组根据某个属性的值返回该对象，或者返回该对象另一个属性的某个值</strong></p><p>自己写了个包放npm了 在<a href="https://www.npmjs.com/package/get-attr-by-another-attr" target="_blank" rel="noopener">这里</a></p><p><strong>对象数组根据某属性进行排序显示</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> infoObj = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"张三"</span>,</span><br><span class="line">    sex: <span class="string">'female'</span>,</span><br><span class="line">    age: <span class="number">30</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"李四"</span>,</span><br><span class="line">    sex: <span class="string">'male'</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"王五"</span>,</span><br><span class="line">    sex: <span class="string">'female'</span>,</span><br><span class="line">    age: <span class="number">40</span>,</span><br><span class="line">  &#125;];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">propertyName</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">object1, object2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value1 = object1[propertyName];</span><br><span class="line">    <span class="keyword">var</span> value2 = object2[propertyName];</span><br><span class="line">    <span class="keyword">return</span> value1 - value2</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">infoObj.sort(compare(<span class="string">"age"</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;对象数组根据某属性过滤对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自己写了个包放npm了 在&lt;a href=&quot;https://www.npmjs.com/package/remove-duplicate-object-by-attr&quot; target=&quot;_blank
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_%E5%AD%97%E6%AE%B5B%E7%9A%84%E6%A0%A1%E9%AA%8C%E8%A7%84%E5%88%99%E6%A0%B9%E6%8D%AE%E5%AD%97%E6%AE%B5A%E7%9A%84%E5%80%BC%E5%8F%91%E7%94%9F%E6%94%B9%E5%8F%98%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_字段B的校验规则根据字段A的值发生改变实现方案/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>文本域的校验规则根据另一个字段的值发生改变，如左侧为身份证号与护照，则右侧对应输入框分别用不同的校验规则<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 动态设置校验规则 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">"动态设置校验规则"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:visible.sync</span>=<span class="string">"dialogVisible"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:close-on-click-modal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:close-on-press-escape</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:show-close</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">"form"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:model</span>=<span class="string">"form"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">label-width</span>=<span class="string">"80px"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"证件信息"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">required</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"8"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">"certificateType"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"form.certificateType"</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">                                 @<span class="attr">change</span>=<span class="string">"changeHander"</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">placeholder</span>=<span class="string">"请选择证件类型"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"身份证"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">value</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">"护照"</span></span></span><br><span class="line"><span class="tag">                                     <span class="attr">value</span>=<span class="string">"passPort"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">class</span>=<span class="string">"line"</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">:span</span>=<span class="string">"1"</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"15"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">ref</span>=<span class="string">"certificateNum"</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">:rules</span>=<span class="string">"certificateNumRule"</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">prop</span>=<span class="string">"certificateNum"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">"请输入证件号"</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">v-model</span>=<span class="string">"form.certificateNum"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">"footer"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"cancelDialog('form')"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span></span></span><br><span class="line"><span class="tag">                 @<span class="attr">click</span>=<span class="string">"saveDialog('form')"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="undefined">      visible: &#123;</span></span><br><span class="line"><span class="javascript">          type: <span class="built_in">Boolean</span>,</span></span><br><span class="line"><span class="javascript">          <span class="keyword">default</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">      dialogVisible: &#123;</span></span><br><span class="line"><span class="undefined">          set (newValue) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.$emit(<span class="string">'update:visible'</span>, newValue)</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined">          get () &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> <span class="keyword">this</span>.visible</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">          certificateNumRule: [],</span></span><br><span class="line"><span class="undefined">          form: &#123;</span></span><br><span class="line"><span class="javascript">              certificateType: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">              certificateNum: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined">          rules: &#123;</span></span><br><span class="line"><span class="undefined">              id: [&#123;</span></span><br><span class="line"><span class="javascript">                  required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                  min: 18,</span></span><br><span class="line"><span class="undefined">                  max: 18,</span></span><br><span class="line"><span class="javascript">                  message: <span class="string">'请输入长度18位的身份证号'</span>,</span></span><br><span class="line"><span class="javascript">                  trigger: <span class="string">'blur'</span>,</span></span><br><span class="line"><span class="undefined">              &#125;, ],</span></span><br><span class="line"><span class="undefined">              passPort: [&#123;</span></span><br><span class="line"><span class="javascript">                  required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                  min: 6,</span></span><br><span class="line"><span class="undefined">                  max: 6,</span></span><br><span class="line"><span class="javascript">                  message: <span class="string">'请输入长度6位的护照号'</span>,</span></span><br><span class="line"><span class="javascript">                  trigger: <span class="string">'blur'</span>,</span></span><br><span class="line"><span class="undefined">              &#125;, ],</span></span><br><span class="line"><span class="undefined">              certificateType: [&#123;</span></span><br><span class="line"><span class="javascript">                  required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                  message: <span class="string">'请选择证件类型'</span>,</span></span><br><span class="line"><span class="javascript">                  trigger: <span class="string">'blur,change'</span>,</span></span><br><span class="line"><span class="undefined">              &#125;, ],</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">      changeHander (val) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (val === <span class="string">'id'</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.certificateNumRule = <span class="keyword">this</span>.rules.id</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (val === <span class="string">'passPort'</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.certificateNumRule = <span class="keyword">this</span>.rules.passPort</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.certificateNumRule = []</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.$refs.certificateNum.resetField()</span></span><br><span class="line"><span class="javascript">              <span class="comment">// 清空原来的校验结果</span></span></span><br><span class="line"><span class="javascript">              <span class="keyword">this</span>.$refs.certificateNum.resetField()</span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      cancelDialog (formName) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$refs[formName].resetFields()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.dialogVisible = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$emit(<span class="string">'cancel'</span>)</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      saveDialog (formName) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="javascript">                  <span class="built_in">console</span>.log(<span class="string">'校验通过'</span>)</span></span><br><span class="line"><span class="javascript">              &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                  <span class="built_in">console</span>.log(<span class="string">'校验失败'</span>)</span></span><br><span class="line"><span class="undefined">              &#125;</span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文本域的校验规则根据另一个字段的值发生改变，如左侧为身份证号与护照，则右侧对应输入框分别用不同的校验规则&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E6%9C%AC%E6%A1%86blur%E6%97%B6,%E5%86%99%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_如何在文本框blur时,写业务逻辑/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">blur</span>=<span class="string">"idBlurHander"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_vueDevtool%20%E5%B4%A9%E6%BA%83%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_vueDevtool 崩溃解决方案/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>关闭vuex的recording和event的recording,仅在需要的时候打开</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关闭vuex的recording和event的recording,仅在需要的时候打开&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_elementui%E7%94%A8resetFields()%E6%97%A0%E6%B3%95%E6%B8%85%E7%A9%BA%E8%A1%A8%E6%A0%BC%E5%8E%9F%E5%9B%A0/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_elementui用resetFields()无法清空表格原因/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p><code>el-form-item</code>必须要有<code>prop</code>才能有用<br>详见<a href="http://element.eleme.io/#/zh-CN/component/form#form-item-attributes" target="_blank" rel="noopener">官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;el-form-item&lt;/code&gt;必须要有&lt;code&gt;prop&lt;/code&gt;才能有用&lt;br&gt;详见&lt;a href=&quot;http://element.eleme.io/#/zh-CN/component/form#form-item-attributes&quot; tar
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180327_element-ui%E5%8D%95%E7%8B%AC%E8%B0%83%E7%94%A8%E6%9F%90%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E6%A0%A1%E9%AA%8C%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180327_element-ui单独调用某一个字段的校验功能/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$refs[ruleFormName].validateField(<span class="string">'checkPass'</span>);</span><br></pre></td></tr></table></figure><p> 直接调用表单需要校验的某个prop即可(问了两个同事都不知道有这个方法)，<a href="http://element.eleme.io/#/zh-CN/component/form#zi-ding-yi-xiao-yan-gui-ze" target="_blank" rel="noopener">官方示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180326_%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AE%B9%E6%89%A9%E5%85%85%E4%B8%BA%E5%8E%9F%E6%9D%A5%E7%9A%8410%E5%80%8D/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180326_如何让一个数组的内容扩充为原来的10倍/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> b =<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(a))</span><br><span class="line"><span class="comment">// 原来数组已存在,只需要重复9次即可</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">  a.push(...b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a.length,a)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20171206_vueStyleguide%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20171206_vueStyleguide使用记录/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>一个多月前研究过这个东西但是忘记记录了，现在开新项目需要重新搭建的时候发现没有做记录，只能从代码里找，实在不方便<br>该项目的<a href="https://github.com/vue-styleguidist/vue-styleguidist" target="_blank" rel="noopener">github</a><br>1.安装<code>vue-styleguidist</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev vue-styleguidist</span><br></pre></td></tr></table></figure></p><p>2.添加配置文件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以vuecli工具生成项目为例</span></span><br><span class="line"><span class="comment">// 根目录下添加文件styleguide.config.js</span></span><br><span class="line"><span class="comment">/* eslint global-require: "off" */</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  components: <span class="string">'src/lib/*.vue'</span>,</span><br><span class="line">  webpackConfig: <span class="built_in">Object</span>.assign(&#123;&#125;,</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'./build/webpack.dev.conf.js'</span>),</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* Custom config options */</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  showUsage: <span class="literal">true</span>,</span><br><span class="line">  showCode: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>3.添加npm scripts<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">+    <span class="string">"styleguide"</span>: <span class="string">"vue-styleguidist server"</span>,</span><br><span class="line">+    <span class="string">"styleguide:build"</span>: <span class="string">"vue-styleguidist build"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4.使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用方法</span><br><span class="line">npm run styleguide</span><br></pre></td></tr></table></figure></p><p>问题：</p><ol><li>styleguide引入其他组件库的方法（如elementui）</li><li>在md文件中引入变量的方法</li><li>在md文件中显示code方法<br>问题1和问题2：<br>其实<a href="https://github.com/vue-styleguidist/vue-styleguidist/blob/master/docs/Cookbook.md#how-to-add-mixins-or-third-party-plugins-to-the-style-guide" target="_blank" rel="noopener">文档</a>里写的很详细了</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/minxins/styleguidist.js   </span></span><br><span class="line"><span class="comment">// styleguide的minxin文件</span></span><br><span class="line"><span class="keyword">import</span> VeeValidate <span class="keyword">from</span> <span class="string">'vee-validate'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VeeValidate);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">     colorDemo: <span class="string">'blue'</span>,</span><br><span class="line">     sizeDemo: <span class="string">'large'</span>,</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// styleguide.config.js 添加如下配置</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">+  mixins: [</span><br><span class="line">+      <span class="string">'src/mixins/styleguidist.js'</span>,</span><br><span class="line">+  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>只需简单配置就解决了问题1和问题2</p><p>问题3：在md文件中显示code方法<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">``` js static</span></span><br><span class="line"><span class="code">这里是会显示出来的code</span></span><br><span class="line"><span class="code">需要在js后面写上static </span></span><br><span class="line"><span class="code">不写static的代码是会运行的代码</span></span><br><span class="line"><span class="code">```  &lt;!--这是结尾符号--&gt;</span></span><br></pre></td></tr></table></figure></p><p>问题4：按照说明安装第三方插件elementui却报错找不到自定义组件<br>解决方法<br>我做了如下两个步骤<br>1.修改elementui的版本号从legacy到1.4.8<br>2.删除依赖包重新安装<br>结果就ok了，初步怀疑是安装依赖包时出现问题</p><p><a href="https://github.com/vue-styleguidist/vue-styleguidist/blob/master/docs/Documenting.md" target="_blank" rel="noopener">文档写法</a><br>更多是示例与用法可参考<a href="https://github.com/CroudSupport/Croud-Style-Guide" target="_blank" rel="noopener">Croud-Style-Guide</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个多月前研究过这个东西但是忘记记录了，现在开新项目需要重新搭建的时候发现没有做记录，只能从代码里找，实在不方便&lt;br&gt;该项目的&lt;a href=&quot;https://github.com/vue-styleguidist/vue-styleguidist&quot; target=&quot;_b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20171212_%E7%94%9F%E4%BA%A7%E5%8C%85%E5%88%86%E6%9E%90/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20171212_生产包分析/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>打包发现vendor.js文件非常大，开始分析</p><p>解决方案<br>1.所有路由组件均动态加载<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Hello <span class="keyword">from</span> <span class="string">'@/components/Hello'</span>;</span><br><span class="line"><span class="comment">// 替换为如下写法</span></span><br><span class="line"><span class="keyword">const</span> Hello = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/Hello'</span>);</span><br></pre></td></tr></table></figure></p><p>2.使用<code>npm run build --report</code>查看各包占用大小<br>2.1如moment可以只选择自己需要的语言包（GZIP后的60.46K–&gt;17.32K）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// </span><br><span class="line">new webpack.ContextReplacementPlugin(</span><br><span class="line">  /moment[\\\/]locale$/,</span><br><span class="line">  /de|fr|hu|zh-cn/</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>2.2如lodash只打包用到的函数模块 (GZIP后的 24.42K—&gt;1.85K 与使用模块数有关)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装相关组件</span></span><br><span class="line">npm i -S lodash-webpack-plugin babel-plugin-lodash</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build/webpack.base.conf.js</span></span><br><span class="line">+ <span class="keyword">var</span> LoadshModuleReplacementPlugin = <span class="built_in">require</span>(<span class="string">'lodash-webpack-plugin'</span>)</span><br><span class="line">  plugins: [</span><br><span class="line">+        <span class="keyword">new</span> LoadshModuleReplacementPlugin()</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .babelrc</span></span><br><span class="line"><span class="string">"plugins"</span>: [</span><br><span class="line">+    <span class="string">"lodash"</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>使用方法跟原来一样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import _ from &apos;lodash&apos;</span><br><span class="line">_.add(1, 2) // 打包时只会引入这一个函数模块</span><br></pre></td></tr></table></figure></p><p>3.css文件分片<br>现在所有的css文件都在app.sha1.css，未找到解决方案。<br>看配置里已经写了，配置的目的是把所有.vue文件里的style部分抽取出来经过预处理器处理完后合并到app.sha1.css文件里<br><a href="https://vue-loader.vuejs.org/en/configurations/extract-css.html" target="_blank" rel="noopener">这里</a>有详细说明<br>但是script引入的样式文件需要单独处理<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build/utils.js</span></span><br><span class="line"><span class="keyword">if</span> (options.extract) &#123;</span><br><span class="line">  <span class="keyword">return</span> ExtractTextPlugin.extract(&#123;</span><br><span class="line">    use: loaders,</span><br><span class="line">    fallback: <span class="string">'vue-style-loader'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> [<span class="string">'vue-style-loader'</span>].concat(loaders)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>目的是about模块有about.css,index模块有index.css<br>在访问到index时加载index.css<br>访问到about.css时才加载about.css<br>并不是一次把所有css文件都加载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打包发现vendor.js文件非常大，开始分析&lt;/p&gt;
&lt;p&gt;解决方案&lt;br&gt;1.所有路由组件均动态加载&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180102_%E5%85%B3%E4%BA%8Echrome%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%82%A3%E4%BA%9B%E6%88%91%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180102_关于chrome控制台那些我不知道的事/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>控制台最常用的就是<code>console</code>大家都知道</p><p>但是还有一个  命令菜单估计知道的人不多吧<br>召唤神龙神秘代码<code>Cmd+Shift+P (Mac)</code> or <code>Ctrl+Shift+P (Windows, Linux)</code>.<br>命令菜单功能多多(可以在搜索框中条件筛选)<br>我感觉非常实用的一个是截屏：<br>包括截取可视部分(capture screenshot)<br>截取整页(capture full size screenshot)<br>截取选中节点(capture node screenshot)  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;控制台最常用的就是&lt;code&gt;console&lt;/code&gt;大家都知道&lt;/p&gt;
&lt;p&gt;但是还有一个  命令菜单估计知道的人不多吧&lt;br&gt;召唤神龙神秘代码&lt;code&gt;Cmd+Shift+P (Mac)&lt;/code&gt; or &lt;code&gt;Ctrl+Shift+P (Windows,
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.zhuyangxing.cn/2018/04/03/20180103_vue_filter%E7%94%A8%E6%B3%95/"/>
    <id>http://www.zhuyangxing.cn/2018/04/03/20180103_vue_filter用法/</id>
    <published>2018-04-03T08:34:07.871Z</published>
    <updated>2018-04-03T08:34:07.871Z</updated>
    
    <content type="html"><![CDATA[<p><strong>需求：</strong><br>vue中，除了在模板中使用过滤器，有时候，methods中也需要使用filters中的过滤器，如何调用<br><strong>解决方案：</strong>  </p><h3 id="定义全局filter"><a href="#定义全局filter" class="headerlink" title="定义全局filter"></a>定义全局filter</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/utils/filters.js</span></span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">'moment'</span></span><br><span class="line"><span class="keyword">let</span> gander = &#123;</span><br><span class="line">    <span class="number">1</span>: <span class="string">'男'</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">'女'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ganderFilter = <span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// console.log(a)</span></span><br><span class="line">    <span class="keyword">return</span> gander[value] || <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> dateTimeFilter = <span class="function">(<span class="params">value, format</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (value) &#123;</span><br><span class="line">        <span class="keyword">return</span> moment(value)</span><br><span class="line">            .format(format)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    ganderFilter,</span><br><span class="line">    dateTimeFilter,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用全局filter"><a href="#使用全局filter" class="headerlink" title="使用全局filter"></a>使用全局filter</h3><p>在vue实例化之前添加全局filter<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/main.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> filter <span class="keyword">from</span> <span class="string">'@/utils/filters.js'</span></span><br><span class="line"><span class="keyword">import</span> mixin <span class="keyword">from</span> <span class="string">'@/utils/mixin.js'</span></span><br><span class="line"><span class="comment">// 添加filter</span></span><br><span class="line"><span class="built_in">Object</span>.keys(filter).forEach(<span class="function"><span class="params">k</span> =&gt;</span> &#123;</span><br><span class="line">    Vue.filter(k, filter[k])</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 启用全局mixin</span></span><br><span class="line">Vue.mixin(&#123;</span><br><span class="line">    ...mixin</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    router,</span><br><span class="line">    store,</span><br><span class="line">    template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">    components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="在模板里使用全局filter"><a href="#在模板里使用全局filter" class="headerlink" title="在模板里使用全局filter"></a>在模板里使用全局filter</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 接受多个参数，第一个参数即需要处理的值 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; time | dateTimeFilter("YYYY-MM-DD HH:mm")&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 只接受1个参数即需要处理的值 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; gander | ganderFilter&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在methods里使用全局filter"><a href="#在methods里使用全局filter" class="headerlink" title="在methods里使用全局filter"></a>在methods里使用全局filter</h3><p>方法一：从filters文件中只引入需要的filter<br>特点：把filter作为函数引入到需要的文件里<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ganderFilter <span class="keyword">from</span> <span class="string">'@/utils/filters.js'</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  methodA: <span class="function"><span class="keyword">function</span> (<span class="params">gander</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如下方式调用</span></span><br><span class="line">    <span class="keyword">return</span> ganderFilter(gander)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法二：从vue实例里获取需要的filter<br>特点：不需要做任何其他处理，方便 推荐使用<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  methodA: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如下方式调用</span></span><br><span class="line">    <span class="keyword">this</span>.$options.filters[<span class="string">'filter-name'</span>](...args)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法三：引入需要的filter到mixin里当做一个method<br>特点：所有vue实例上都会有这个方法 推荐使用<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/utils/mixin.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> filter <span class="keyword">from</span> <span class="string">'@/utils/filters.js'</span></span><br><span class="line"><span class="keyword">let</span> mixin = &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        ...filter,</span><br><span class="line">        methodA,</span><br><span class="line">        methodB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> mixin</span><br></pre></td></tr></table></figure></p><p>其实三种方法都可以</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;需求：&lt;/strong&gt;&lt;br&gt;vue中，除了在模板中使用过滤器，有时候，methods中也需要使用filters中的过滤器，如何调用&lt;br&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;  &lt;/p&gt;
&lt;h3 id=&quot;定义全局filter&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
  </entry>
  
</feed>
